<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- SqlSessionTemplate -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<!-- mybatis-config.xml, mapper*.xml 파일 -->
		<constructor-arg index="0" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>

	<!-- mybatis-config read mapper: anno.xml, ... read -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- DB 연결 -->
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis main 설정 파일 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<!-- mapper 파일 읽기 : mapper/**/*.xml -->
		<property name="mapperLocations"
			value="classpath:mapper/**/*.xml" />
	</bean>

	<!-- transactionManager -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="do*" read-only="true" />
			<!-- name="up*" : up으로 시작하는 메서드, rollback-for="Exception" : Exception 
				발생하면 rollback 처리, propagation="REQUIRED" : 메서드 내에서 다른 메서드를 사용할 때 하나의 트랜잭션으로 
				묶을지 여부 -->
			<tx:method name="up*" read-only="false"
				rollback-for="Exception" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- transaction PointCut -->
	<aop:config>
		<aop:pointcut
			expression="execution(* com.pcwk.ehr..service.*Impl.up*(..))"
			id="txClass" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txClass" />
	</aop:config>

	<!-- new DataSourceTransactionManager(dataSource); -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- database.properties -->
	<context:property-placeholder
		location="classpath:/resource/config/database.properties" />
	<!-- Connection Pool -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 최대 접속 허용 Connection -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 여분으로 남겨질 Connection -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!-- DB 연결 대기 시간 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<!-- Connection이 잘못 관리되어 버려진 연결 찾아 활용 -->
		<property name="removeAbandoned"
			value="${jdbc.removeAbandoned}" />
		<!-- 버려진 연결로 인식할 시간 -->
		<property name="removeAbandonedTimeout"
			value="${jdbc.removeAbandonedTimeout}" />
	</bean>

	<!--DummyMailSender : 개발 서버용 -->
	<bean id="dummyMailSender"
		class="com.pcwk.ehr.user.service.DummyMailSender"></bean>

	<!-- JavaMailSenderImpl : Naver smtp -->
	<bean id="mailSenderImpl"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="465" />
		<property name="username" value="dlgkssk1627@naver.com" />
		<property name="password" value="" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.host">smtp.naver.com</prop>
				<prop key="mail.smtp.port">465</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<prop key="mail.smtp.ssl.enable">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
				<prop key="mail.debug">true</prop>
			</props>

		</property>
	</bean>

</beans>