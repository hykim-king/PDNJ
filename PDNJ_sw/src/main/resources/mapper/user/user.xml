<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Dao: query 찾는 분류 기준 namespace+id -> com.pcwk.ehr.anno.doSelectOne -->
<mapper namespace="com.pcwk.ehr.user">

    <select id="idDuplicateCheck" parameterType="UserVO" resultType="int">
        SELECT                   
            COUNT(*) cnt         
        FROM                     
            member                
        WHERE user_id = #{userId}
    </select>
    
    <sql id="searchCondition">
        <where>
          <choose>
              <when test="searchDiv != null and searchDiv == '10'">
                  user_id = #{searchWord}
              </when>
              <when test="searchDiv != null and searchDiv == '20'">
                  username LIKE #{searchWord} || '%'
              </when>
              <when test="searchDiv != null and searchDiv == '30'">
                  email = #{searchWord}
              </when>
          </choose>
        </where>
    </sql>

    <select id="doRetrieve" parameterType="UserVO" resultType="UserVO">
        SELECT
            A.rnum AS no,
            A.user_id,
            A.password,
            A.username,
            A.email,
            A.user_tel,
            B.total_cnt
        FROM (
            SELECT  
                TT1.rnum,
                TT1.user_id,
                TT1.password,
                TT1.username,
                TT1.email,
                TT1.user_tel
            FROM (
                SELECT 
                    ROWNUM AS rnum, T1.*
                FROM (
                    SELECT *
                    FROM member
                    <!-- WHERE 조건 user_id(10), name(20), email(30) -->
                    <include refid="searchCondition"></include>
                    ORDER BY user_id
                )T1
                <![CDATA[
                WHERE ROWNUM <= ( #{pageSize} * (#{pageNo} - 1) + #{pageSize} )  
            )TT1
            WHERE rnum >= ( #{pageSize} * (#{pageNo} - 1) + 1 ) ]]>
         ) A
        CROSS JOIN (
            SELECT COUNT(*) total_cnt
            FROM member
            <!-- WHERE 조건 -->
            <include refid="searchCondition"></include>
        ) B
    </select>

    <resultMap type="UserVO" id="userMap">
        <result column="user_id" property="userId"/>
        <result column="password" property="password"/>
        <result column="username" property="username"/>
        <result column="email" property="email"/>
        <result column="user_tel" property="userTel"/>
    </resultMap>
    
    <select id="getAll" parameterType="UserVO" resultMap="userMap">
        SELECT  t1.user_id,      
                t1.password,     
                t1.username,     
                t1.email,        
                t1.user_tel    
        FROM                     
            member t1            
        WHERE user_id LIKE #{userId}||'%'
        ORDER BY t1.user_id                                       
    </select>

    <select id="getCount" parameterType="UserVO"
            resultType="int">
        SELECT                   
            COUNT(*) cnt         
        FROM                     
            member               
        WHERE user_id LIKE #{userId}||'%'
    </select>

    <update id="doUpdate" parameterType="UserVO">
        UPDATE member    
        SET              
            user_id  = #{userId},
            password = #{password},
            username = #{username},
            email    = #{email},
            user_tel = #{userTel} 
        WHERE            
            user_id = #{userId}           
    </update>

    <select id="doSelectOne" parameterType="UserVO"
        resultType="UserVO">
         SELECT           
             user_id AS userId,     
             password,    
             username,    
             email,       
             user_tel AS userTel     
         FROM             
             member       
         WHERE user_id = #{userId}
    </select>

    <insert id="doSave" parameterType="UserVO">
        INSERT INTO member (
            user_id,        
            password,       
            username,       
            email,          
            user_tel        
        ) VALUES (          
            #{userId},              
            #{password},              
            #{username},              
            #{email},              
            #{userTel}               
        )                   
    </insert>

    <delete id="doDelete" parameterType="UserVO">
        DELETE FROM member
        WHERE user_id = #{userId}
    </delete>
</mapper>